{"ast":null,"code":"import _defineProperty from \"/Users/esdraspinheiro/Documents/Desenvolvimento/ProjetoGoStack/redux/Rocketshoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/esdraspinheiro/Documents/Desenvolvimento/ProjetoGoStack/redux/Rocketshoes/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.handleAddProduct = id => {\n      const addToCartRequest = this.props.addToCartRequest;\n      addToCartRequest(id);\n    };\n\n    this.state = {\n      products: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products');\n    const data = response.data.map(product => _objectSpread({}, product, {\n      priceFomatted: formatPrice(product.price)\n    }));\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const products = this.state.products;\n    const amount = this.props.amount;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, product.priceFomatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProduct(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(MdAddShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"ADICIONAR AO CARRINHO\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Desenvolvimento/ProjetoGoStack/redux/Rocketshoes/src/pages/Home/index.js"],"names":["React","Component","connect","bindActionCreators","MdAddShoppingCart","api","CartActions","formatPrice","ProductList","Home","constructor","handleAddProduct","id","addToCartRequest","props","state","products","componentDidMount","response","get","data","map","product","priceFomatted","price","setState","render","amount","image","title","mapStateToProps","cart","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\n\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            products: []\n        }\n    }\n\n    async componentDidMount() {\n        const response = await api.get('products');\n\n        const data = response.data.map(product => ({\n            ...product,\n            priceFomatted: formatPrice(product.price)\n        }))\n\n        this.setState({ products: data });\n    }\n\n    handleAddProduct = id => {\n        const { addToCartRequest } = this.props;\n\n        addToCartRequest(id);\n    }\n\n    render() {\n\n        const { products } = this.state;\n        const { amount } = this.props;\n\n        return (\n            <ProductList>\n                {products.map(product => (\n                    <li key={product.id} >\n                        <img src={product.image} alt={product.title} />\n                        <strong>{product.title}</strong>\n                        <span>{product.priceFomatted}</span>\n\n                        <button type=\"button\" onClick={() => this.handleAddProduct(product.id)}>\n                            <div>\n                                <MdAddShoppingCart size={16} color=\"#FFF\" /> \n                                {amount[product.id] || 0} \n                            </div>\n\n                            <span>ADICIONAR AO CARRINHO</span>\n                        </button>\n                    </li>\n                ))}\n            </ProductList>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    amount: state.cart.reduce((amount, product) => {\n        amount[product.id] = product.amount\n\n        return amount;\n    }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}