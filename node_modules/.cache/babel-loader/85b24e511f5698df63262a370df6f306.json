{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nimport createSagaMiddleware from 'redux-saga';\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nconst enhancer = process.env.NODE_ENV === 'development' ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/esdraspinheiro/Documents/Desenvolvimento/ProjetoGoStack/redux/redux-web/src/store/index.js"],"names":["createStore","applyMiddleware","compose","rootReducer","rootSaga","createSagaMiddleware","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EAAzC,GAA4E,IAAhG;AACA,MAAMC,cAAc,GAAGR,oBAAoB,CAAC;AACxCC,EAAAA;AADwC,CAAD,CAA3C;AAIA,MAAMQ,QAAQ,GAAGP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACXP,OAAO,CACLQ,OAAO,CAACC,IAAR,CAAaI,cAAb,EADK,EAELd,eAAe,CAACY,cAAD,CAFV,CADI,GAITZ,eAAe,CAACY,cAAD,CAJvB;AAMA,MAAMG,KAAK,GAAGhB,WAAW,CAACG,WAAD,EAAcW,QAAd,CAAzB;AAEAD,cAAc,CAACI,GAAf,CAAmBb,QAAnB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nimport createSagaMiddleware from 'redux-saga';\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n    sagaMonitor\n});\n\nconst enhancer = process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(sagaMiddleware)\n    ) : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}